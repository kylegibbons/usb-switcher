cmake_minimum_required(VERSION 3.12)
set(PICO_PLATFORM rp2040
set(PICO_BOARD pico_w)
# Pull in SDK (must be before project)
include($ENV{PICO_SDK_PATH}/external/pico_sdk_import.cmake)
project(pico_examples C CXX ASM)
# Initialize the SDK
pico_sdk_init()

# Global default options
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

set(CFG_TUD_ENABLED true)

add_compile_options(-Wall
        -Wno-format          # int != int32_t as far as the compiler is concerned because gcc has int32_t as long int
        -Wno-unused-function # we have some for the docs that aren't called
        -Wno-maybe-uninitialized
        )


# Create target
add_executable(usbtest)
target_sources(usbtest PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/usb_descriptors.cpp
        )
target_include_directories(usbtest PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${PICO_SDK_PATH}/lib/tinyusb/src 
        ${PICO_SDK_PATH}/lib/tinyusb/src/tusb
        )
target_compile_definitions(usbtest PUBLIC CFG_TUSB_MCU=OPT_MCU_RP2040)

# Pull in our pico_stdlib which pulls in commonly used features
target_link_libraries(usbtest pico_stdlib tinyusb_device tinyusb_board)
pico_add_extra_outputs(usbtest)